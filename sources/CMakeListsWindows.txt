cmake_minimum_required(VERSION 3.10)

project(presien-lic-app)

set(CMAKE_VERBOSE_MAKEFILE ON)

# Set the configuration options from the build script
set(BUILD_TYPE "Release")
set(LIB_TYPE "dynamic")
set(ARCHITECTURE "x64") 

if (${LIB_TYPE} STREQUAL "shared")
    set(LIB_TYPE "dynamic")
endif ()

if (${LIB_TYPE} STREQUAL "staticMD")
    add_definitions(-DLS_STATIC)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MD")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd")
elseif (${LIB_TYPE} STREQUAL "staticMT")
    add_definitions(-DLS_STATIC)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
endif ()

add_executable(${PROJECT_NAME}
  KeyBasedSample.cpp
  KeyBasedSample.h
  UserBasedSample.cpp
  UserBasedSample.h
  SampleBase.cpp
  SampleBase.h
  main.cpp
  AppConfig.h
  AppConfig.cpp
)


# Additional include directories
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../include/)

if (${BUILD_TYPE} STREQUAL "Debug")
    set(CMAKE_BUILD_TYPE "Debug")
    target_link_libraries(${PROJECT_NAME} PUBLIC debug ${CMAKE_CURRENT_SOURCE_DIR}/../bin/${ARCHITECTURE}/${LIB_TYPE}/LicenseSpringD.lib)
    if (${LIB_TYPE} STREQUAL "dynamic")
        target_compile_definitions(${PROJECT_NAME} PRIVATE WIN32 _DEBUG _CONSOLE )
    else()
        target_compile_definitions(${PROJECT_NAME} PRIVATE WIN32 _DEBUG _CONSOLE LS_STATIC )
    endif()
else ()
    set(CMAKE_BUILD_TYPE "Release")
    target_link_libraries(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/../bin/${ARCHITECTURE}/${LIB_TYPE}/LicenseSpring.lib)
    if (${LIB_TYPE} STREQUAL "dynamic")
        target_compile_definitions(${PROJECT_NAME} PRIVATE WIN32 NDEBUG _CONSOLE )
    else()
        target_compile_definitions(${PROJECT_NAME} PRIVATE WIN32 NDEBUG _CONSOLE LS_STATIC )
    endif()
endif ()

target_link_options(${PROJECT_NAME} PRIVATE "/ignore:4099" )
if (${BUILD_TYPE} STREQUAL "Debug")
    target_link_options(${PROJECT_NAME} PRIVATE "/NODEFAULTLIB:libcmt.lib")
endif()

set_target_properties(${PROJECT_NAME} PROPERTIES
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS NO
)

set(OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/../../bin/${ARCHITECTURE}/${LIB_TYPE}")
set_target_properties(${PROJECT_NAME} PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIRECTORY}
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIRECTORY}
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIRECTORY}
)
